# -*- coding: utf-8 -*-
"""Hemanath_MLA_CIA1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/139hUQ7BUcStB-nXTMAmiEilT-JjNsEkR
"""

#importing required libraries
import numpy as np #to perform mathematical operations 
import pandas as pd #data analysis
import matplotlib.pyplot as plt #data visualization and graphical plotting
import seaborn as sns #eda, easy to handle pandas df
from pandas.plotting import scatter_matrix
from sklearn.linear_model import LinearRegression #for statistical modelling
from sklearn.model_selection import train_test_split #splitting train and test data
from sklearn import linear_model #for preparinf regression models
import sklearn.metrics as sm
from sklearn.metrics import mean_squared_error #calculate MSE
from sklearn.metrics import r2_score #calculate r2 score

#connecting to cloud
from google.colab import drive
drive.mount("/content/gdrive")

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/gdrive/My Drive/Colab Notebooks/

#data exploration
df = pd.read_csv("CeoCompensationupdated.csv")
df.info()

df.describe()

df.corr()

df.head()

#checking for null
print(df.isnull().sum())
df[df.isnull() == True].head()

sns.heatmap(df.corr())

#multivariate analysis
comp_sm = scatter_matrix(df[['COMP', 'EXPER', 'SALES','Sales By Compensation','Expense']])

ax = sns.kdeplot(df['COMP'])
ax

df['COMP'].describe()

comp = ['COMP', 'EXPER','SALES','Sales By Compensation','Expense']

for col in comp:
    ax_comp = sns.kdeplot(df[col])
    ax_comp

plt.figure(figsize=(15,8))
for col in list(df['EXPER'].unique()):
    sns.kdeplot(df['COMP'][df['EXPER'] == col], label = col)

comp = ['COMP', 'SALES']

for col in comp:
    ax_comp2 = sns.kdeplot(df[col])
    ax_comp2

plt.figure(figsize=(15,8))
for col in list(df['SALES'].unique()):
    sns.kdeplot(df['COMP'][df['SALES'] == col], label = col)

#multivariate linear regression
x=df[['AGE','TENURE','EXPER','SALES','VAL','PROF','EDUCATN','BACKGRD','PCNTOWN','Sales By Compensation']]
y=df[['COMP']]

regr = linear_model.LinearRegression()
regr.fit(x,y)
y_pred=regr.predict(x)

print ("MSE : ",mean_squared_error(y,y_pred))
print ("coefficients : ",regr.coef_) 
print ("Intercept : ",regr.intercept_)
print ("R2 score : ",r2_score(y,y_pred))